// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API Routes GET /participant/:participantId should fail when the participant does not exist 1`] = `
{
  "error": "Unknown participantId",
}
`;

exports[`API Routes GET /participant/:participantId should fail when the participant is invalid 1`] = `
{
  "error": "participantId is not a valid UUID",
}
`;

exports[`API Routes GET /participant/:participantId should retrieve public information about a participant 1`] = `
{
  "publicInfo": {
    "participantHasDoneSomething": true,
  },
}
`;

exports[`API Routes GET /session/:sessionId should fail when the session does not exist 1`] = `
{
  "error": "Unknown sessionId",
}
`;

exports[`API Routes GET /session/:sessionId should fail when the sessionId is invalid 1`] = `
{
  "error": "sessionId is not a valid UUID",
}
`;

exports[`API Routes GET /session/:sessionId should retrieve public information about a session 1`] = `
{
  "publicInfo": {
    "dolor": "sit",
  },
}
`;

exports[`API Routes GET /study/:studyId/count/:countType should fail when the countType does not exist 1`] = `
{
  "error": "Failed to retrieve study count",
}
`;

exports[`API Routes GET /study/:studyId/count/:countType should fail when the study does not exist 1`] = `
{
  "error": "Unknown studyId",
}
`;

exports[`API Routes GET /study/:studyId/data/:dataType should fail when the study does not exist 1`] = `
{
  "error": "Unknown studyId",
}
`;

exports[`API Routes GET /study/:studyId/data/:dataType should require authentication 1`] = `
{
  "error": "Authentication via API Key required",
}
`;

exports[`API Routes GET /study/:studyId/data/:dataType should require the correct API KEY 1`] = `
{
  "error": "The provided API Key is invalid.",
}
`;

exports[`API Routes POST /response should fail to submit a response when the session does not exist 1`] = `
{
  "error": "Unknown sessionId",
}
`;

exports[`API Routes POST /response should fail to submit a response when the sessionId is invalid 1`] = `
{
  "error": "sessionId is not a valid UUID",
}
`;

exports[`API Routes POST /response should fail to submit non-JSON payload 1`] = `
{
  "error": "Payload has to be a JSON object, undefined or null.",
}
`;

exports[`API Routes POST /session/finish should fail when the session does not exist 1`] = `
{
  "error": "Unknown sessionId",
}
`;

exports[`API Routes POST /session/finish should fail when the sessionId is invalid 1`] = `
{
  "error": "sessionId is not a valid UUID",
}
`;

exports[`API Routes POST /session/finish should mark a session as finished 1`] = `
{
  "success": true,
}
`;

exports[`API Routes PUT /participant/:participantId should fail when the participant does not exist 1`] = `
{
  "error": "Unknown participantId",
}
`;

exports[`API Routes PUT /participant/:participantId should fail when the participant is invalid 1`] = `
{
  "error": "participantId is not a valid UUID",
}
`;

exports[`API Routes PUT /participant/:participantId should update an existing participant 1`] = `
{
  "success": true,
}
`;

exports[`API Routes PUT /session/:sessionId should fail when the session does not exist 1`] = `
{
  "error": "Unknown sessionId",
}
`;

exports[`API Routes PUT /session/:sessionId should fail when the sessionId is invalid 1`] = `
{
  "error": "sessionId is not a valid UUID",
}
`;

exports[`API Routes PUT /session/:sessionId should update a session 1`] = `
{
  "success": true,
}
`;
